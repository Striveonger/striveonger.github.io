(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{475:function(e,r,t){e.exports=t.p+"assets/img/v2-5210ed7234f7046273104bed9bfd7764_r.4a738ffe.jpg"},678:function(e,r,t){"use strict";t.r(r);var n=t(0),s=Object(n.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("经过测试, 是可以动态的改变 ServiceLoader 迭代指定的服务实例的, 甚至可以改变应用类加载器中.")]),e._v(" "),r("p",[e._v("测试使用自己定义的ClassLoader, 是否可以覆盖系统加载的冲突的jar包.")]),e._v(" "),r("p",[e._v("手动删除系统中冲突的类, 是可以解决冲突问题, 但是还是无法解决 DriverManager.getConnection 带来的问题")]),e._v(" "),r("p",[e._v("所以, 还是要重写.")]),e._v(" "),r("p",[e._v("还有就是动态在DriverManager中加载的Driver, 需要删除的.")]),e._v(" "),r("p",[r("img",{attrs:{src:t(475),alt:"preview"}})])])}),[],!1,null,null,null);r.default=s.exports}}]);